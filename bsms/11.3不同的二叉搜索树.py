# 给定一个整数 n，求以 1…n 为节点组成的二叉搜索树有多少种？
#
# 结果对 109+7 取模后输出。
#
# 输入格式
# 共一行，包含一个整数 n。
#
# 输出格式
# 输出一个整数，表示对 109+7 取模后的结果。
#
# 数据范围
# 1≤n≤1000
# 输入样例：
# 3
# 输出样例：
# 5
# 样例解释
# 当 n=3 时, 一共有 5 种不同结构的二叉搜索树:
#
#    1         3     3      2      1
#     \       /     /      / \      \
#      3     2     1      1   3      2
#     /     /       \                 \
#    2     1         2                 3

# 1. DP
# 状态表示 f[i] 集合：由n个有编号的点构成的二叉搜索树BST的数量
#               属性：数量
# 状态计算——集合划分

MOD = int(1e9 + 7)
n = int(input().strip())
f = [0] * (n + 1)
f[0] = 1

for i in range(1, n + 1):
    for j in range(i):
        f[i] = (f[i] + f[j] * f[i - 1 - j]) % MOD

print(f[n] % MOD)

